
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite" // Or your chosen database provider
  url      = "file:./dev.db" // Or your database URL
}

model Patient {
  id           String        @id @default(cuid())
  name         String
  email        String        @unique
  password     String // Added for authentication
  phone        String?
  dob          DateTime?     @map("date_of_birth")
  appointments Appointment[]
  createdAt    DateTime      @default(now()) @map("created_at")
  updatedAt    DateTime      @updatedAt @map("updated_at")

  @@map("patients")
}

model Dentist {
  id                      String        @id @default(cuid())
  name                    String
  email                   String        @unique
  password                String // Added for authentication
  specialty               String
  phone                   String?
  isAvailableForEmergency Boolean       @default(false)
  profileImageUrl         String?
  bio                     String?
  appointments            Appointment[]
  createdAt               DateTime      @default(now()) @map("created_at")
  updatedAt               DateTime      @updatedAt @map("updated_at")

  @@map("dentists")
}

model Appointment {
  id          String            @id @default(cuid())
  patientId   String
  patient     Patient           @relation(fields: [patientId], references: [id])
  dentistId   String
  dentist     Dentist           @relation(fields: [dentistId], references: [id])
  date        DateTime // Changed to DateTime for better querying
  time        String // e.g., "10:00 AM"
  service     String // Consider linking to a Service model if services are complex
  notes       String?
  status      AppointmentStatus @default(SCHEDULED)
  createdAt   DateTime          @default(now()) @map("created_at")
  updatedAt   DateTime          @updatedAt @map("updated_at")

  @@map("appointments")
}

enum AppointmentStatus {
  SCHEDULED
  COMPLETED
  CANCELLED
}

model Service {
  id              String    @id @default(cuid())
  name            String    @unique
  durationMinutes Int
  description     String?
  // appointments    Appointment[] // If using a direct relation
  createdAt       DateTime  @default(now()) @map("created_at")
  updatedAt       DateTime  @updatedAt @map("updated_at")

  @@map("services")
}
